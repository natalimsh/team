import React, { useState } from 'react';
import './ContactForm.css';

function ContactForm() {
    const [formData, setFormData] = useState({ name: '', email: '', message: '' });
    const [status, setStatus] = useState('');
    const [isSubmitting, setIsSubmitting] = useState(false);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({ ...prev, [name]: value }));
    };

    const handleSubmit = async (e) => {
        e.preventDefault();
        setIsSubmitting(true);
        setStatus('–ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...');

        try {
            const backendApiUrl = 'http://localhost:5000/api/send-email';
            const response = await fetch(backendApiUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(formData),
            });

            const data = await response.json();
            if (response.ok) {
                setStatus('‚úÖ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!');
                setFormData({ name: '', email: '', message: '' });
            } else {
                setStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${data.message || '–©–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫.'}`);
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º–∏:', error);
            setStatus('‚ùå –ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.');
        } finally {
            setIsSubmitting(false);
        }
    };

    return (
        <section id="contact-form-section" className="p-8 max-w-xl w-full mx-auto bg-gradient-to-br from-white via-blue-50 to-white shadow-2xl rounded-3xl animate-fade-in">
            <div className="text-center mb-8">
                <h2 className="text-4xl font-extrabold text-blue-800 mb-2">üì¨ –ó–≤'—è–∑–æ–∫ –∑ –Ω–∞–º–∏</h2>
                <p className="text-gray-600">–ú–∞—î—Ç–µ —ñ–¥–µ—é —á–∏ –∑–∞–ø–∏—Ç? –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞–º –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑!</p>
            </div>

            <form className="flex flex-col space-y-4" onSubmit={handleSubmit}>
                <input
                    type="text"
                    name="name"
                    placeholder="üë§ –í–∞—à–µ –Ü–º'—è"
                    value={formData.name}
                    onChange={handleChange}
                    required
                    className="p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500"
                    disabled={isSubmitting}
                />
                <input
                    type="email"
                    name="email"
                    placeholder="‚úâÔ∏è –í–∞—à Email"
                    value={formData.email}
                    onChange={handleChange}
                    required
                    className="p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500"
                    disabled={isSubmitting}
                />
                <textarea
                    name="message"
                    placeholder="üí¨ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è"
                    rows="5"
                    value={formData.message}
                    onChange={handleChange}
                    required
                    className="p-4 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none"
                    disabled={isSubmitting}
                ></textarea>

                <button
                    type="submit"
                    className="bg-blue-600 text-white font-semibold py-3 px-6 rounded-xl hover:bg-blue-700 transition duration-300 ease-in-out shadow-lg disabled:opacity-50 disabled:cursor-not-allowed"
                    disabled={isSubmitting}
                >
                    {isSubmitting ? '‚è≥ –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è...' : 'üì® –ù–∞–¥—ñ—Å–ª–∞—Ç–∏'}
                </button>

                {status && (
                    <p className="mt-4 text-center text-sm font-medium text-gray-700">{status}</p>
                )}
            </form>
        </section>
    );
}

export default ContactForm;
